spring:
  application:
    name: wms-receiving
  security:
    user:
      name: user
      password: sa
  jpa:
    open-in-view: false
    show-sql: false
  jackson:
    date-format: "yyyy-MM-dd'T'HH:mm:ssXXX" # Only matches Dates no Instants!
  main:
    allow-bean-definition-overriding: true
  mvc:
    format:
      date-time: "yyyy-MM-dd'T'HH:mm:ssXXX" # Must match the pattern how of @JsonFormat field annotation patterns
      date: yyyy-MM-dd
      time: HH:mm:ss
  zipkin:
    sender:
      type: web

feign:
  client:
    config:
      common-service:
        read-timeout: 20000
        connect-timeout: 10000
  httpclient:
    connection-timeout: 30000
    connection-timer-repeat: 30000
  circuitbreaker:
    enabled: true

owms:
  eureka:
    url: http://user:sa@localhost:8761
    zone: ${owms.eureka.url}/eureka/
  srv:
    prefix: common
    protocol: http
    hostname: localhost
  receiving:
    unexpected-receipts-allowed: true
    initial-location-id: EXTERN
    create-tu-on-expected-tu-receipt: true

server:
  port: ${PORT:8141}

eureka:
  client:
    instance-info-replication-interval-seconds: 10 # default is 30
    service-url:
      defaultZone: ${owms.eureka.zone}  # Must be camelCase
  instance:
    hostname: ${owms.srv.hostname}
    secure-port-enabled: false
    non-secure-port-enabled: true
    metadata-map:
      config-protocol: http # The protocol used to access the config server
      username: ${spring.security.user.name}
      password: ${spring.security.user.password}
      protocol: ${owms.srv.protocol}
      zone: ${owms.eureka.zone}

info:
  scm-url: "@scm.url@"
  build-url: "https://github.com/openwms/@project.artifactId@/actions"

logging:
  file:
    name: BOOT-WMS-Receiving.log
    path: "/tmp/owms"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    rabbit:
      enabled: false

resilience4j:
  timelimiter:
    configs:
      default:
        timeoutDuration: 8s
---
spring:
  config:
    activate:
      on-profile: ASYNCHRONOUS
  rabbitmq:
    listener:
      simple:
        retry:
          max-attempts: 3
          enabled: true
          initial-interval: 1s
          max-interval: 1s

management:
  health:
    rabbit:
      enabled: true

owms:
  commands:
    common:
      tu:
        exchange-name: common.tu.commands
    inventory:
      pu:
        exchange-name: inventory.commands
        routing-key: pu.command.create
  dead-letter:
    exchange-name: dle.receiving
    queue-name: receiving-dl-queue
  events:
    receiving:
      exchange-name: receiving
    inventory:
      exchange-name: inventory
      products:
        queue-name: receiving-products-queue
        routing-key: product.event.#
    common:
      tu:
        exchange-name: common.tu
        routing-key: tu.event.#
        queue-name: receiving-tu-queue
  receiving:
    serialization: json

---
# Might run in standalone or distributed environment
spring:
  config:
    activate:
      on-profile: DEMO
  cloud:
    bootstrap:
      enabled: false
    bus:
      enabled: false
    config:
      discovery:
        enabled: false
      enabled: false
      fail-fast: false # true means retry
      retry:
        max-attempts: 120
    discovery:
      enabled: false
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          import_files: import-DEMO.sql

---
spring:
  config:
    activate:
      on-profile: HEROKU
  main:
    banner-mode: "OFF"

owms:
  srv:
    protocol: https
    hostname: openwms-wms-receiving.herokuapp.com

eureka:
  instance:
    secure-port-enabled: true
    non-secure-port-enabled: false
    statusPageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/info
    healthCheckUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/health
    homePageUrl: ${owms.srv.protocol}://${owms.srv.hostname}:${server.port}/actuator/

---
spring:
  config:
    activate:
      on-profile: TEST
  cloud:
    bootstrap:
      enabled: false
    config:
      discovery:
        enabled: false
      enabled: false
      fail-fast: false # true means retry
      retry:
        max-attempts: 120
    discovery:
      enabled: false
  jpa:
    show-sql: false
  main:
    banner-mode: "off"
  zipkin:
    enabled: false
    discovery-client-enabled: false
    sender:
      type: rabbit

---
spring:
  config:
    activate:
      on-profile: TESTPG
  cloud:
    bootstrap:
      enabled: false
    bus:
      enabled: false
    config:
      discovery:
        enabled: false
      enabled: false
      fail-fast: false # true means retry
      retry:
        max-attempts: 120
    discovery:
      enabled: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql:testdb
    username: KARL
    password: KARL
  jpa:
    database: postgresql
    generate-ddl: true
    properties:
      hibernate:
        hbm2ddl:
          auto: create
          import_files: import-TEST.sql
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
        temp:
          use_jdbc_metadata_defaults: false
        default_schema: public
    hibernate:
      ddl-auto: create
  main:
    banner-mode: "off"
  zipkin:
    enabled: false
    discovery-client-enabled: false
    sender:
      type: rabbit
